#include <iostream>
using namespace std;
class SparseMatrix {
public:
    SparseMatrix(int rows, int cols)
    {
        this->rows = rows;
        this->cols = cols;
        this->numNonZero = 0;

        //memory for the 2D array
        data = new int*[3];
        for (int i = 0; i < 3; i++)
        {
            data[i] = new int[max_ele];
        }
    }

    void insert(int row, int col, int value)
    {
        if (value != 0) {
            data[0][numNonZero] = row;
            data[1][numNonZero] = col;
            data[2][numNonZero] = value;
            numNonZero++;
        }
    }

    void display() 
{
        int i, j, k = 0;
        for (i = 0; i < rows; i++)
        {
            for (j = 0; j < cols; j++)
            {
                if (k < numNonZero && data[0][k] == i && data[1][k] == j) 
                {
                    cout << data[2][k] << " ";
                    k++;
                } 
                else
                {
                    cout << "0 ";
                }
            }
            cout << endl;
        }
    }

public:
    int rows, cols, numNonZero;
    int** data;
    const int max_ele = 100;
};

int main() 
{
    SparseMatrix matrix(4, 5); // 4 rows & 5 columns
    matrix.insert(0, 2, 3); // R / C/ V
    matrix.insert(0, 4, 4);
    matrix.insert(1, 2, 5);
    matrix.insert(1, 3, 7);
    matrix.insert(3, 1, 2);
    matrix.insert(3, 2, 6);

    matrix.display();

    return 0;
}

